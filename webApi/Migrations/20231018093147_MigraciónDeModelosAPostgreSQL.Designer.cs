// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace webApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231018093147_MigraciónDeModelosAPostgreSQL")]
    partial class MigraciónDeModelosAPostgreSQL
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Asiento", b =>
                {
                    b.Property<int>("AvionAsientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AvionAsientoId"));

                    b.Property<int>("AvionId")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroAsiento")
                        .HasColumnType("integer");

                    b.Property<bool>("Ocupado")
                        .HasColumnType("boolean");

                    b.HasKey("AvionAsientoId");

                    b.HasIndex("AvionId");

                    b.ToTable("Asientos");
                });

            modelBuilder.Entity("Avion", b =>
                {
                    b.Property<int>("AvionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AvionId"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("integer");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AvionId");

                    b.ToTable("Aviones");
                });

            modelBuilder.Entity("Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClienteID"));

                    b.Property<int>("Carnet")
                        .HasColumnType("integer");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EsEstudiante")
                        .HasColumnType("boolean");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Telefono")
                        .HasColumnType("integer");

                    b.Property<string>("Universidad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ClienteID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Destino", b =>
                {
                    b.Property<int>("DestinoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DestinoId"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodigoAeropuerto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DestinoId");

                    b.ToTable("Destinos");
                });

            modelBuilder.Entity("Maleta", b =>
                {
                    b.Property<int>("NumeroMaleta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NumeroMaleta"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Dueno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Peso")
                        .HasColumnType("integer");

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric");

                    b.Property<int>("ReservacionID")
                        .HasColumnType("integer");

                    b.HasKey("NumeroMaleta");

                    b.HasIndex("ReservacionID");

                    b.ToTable("Maletas");
                });

            modelBuilder.Entity("Origen", b =>
                {
                    b.Property<int>("OrigenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrigenId"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodigoAeropuerto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OrigenId");

                    b.ToTable("Origenes");
                });

            modelBuilder.Entity("Reservacion", b =>
                {
                    b.Property<int>("ReservacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReservacionID"));

                    b.Property<int>("CantidadPersonas")
                        .HasColumnType("integer");

                    b.Property<int>("ClienteID")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("interval");

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PrecioDerivado")
                        .HasColumnType("numeric");

                    b.HasKey("ReservacionID");

                    b.HasIndex("ClienteID");

                    b.ToTable("Reservaciones");
                });

            modelBuilder.Entity("Vuelo", b =>
                {
                    b.Property<int>("VueloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VueloId"));

                    b.Property<int>("AvionId")
                        .HasColumnType("integer");

                    b.Property<int>("DestinoId")
                        .HasColumnType("integer");

                    b.Property<int>("OrigenId")
                        .HasColumnType("integer");

                    b.HasKey("VueloId");

                    b.HasIndex("AvionId");

                    b.HasIndex("DestinoId");

                    b.HasIndex("OrigenId");

                    b.ToTable("Vuelos");
                });

            modelBuilder.Entity("Asiento", b =>
                {
                    b.HasOne("Avion", "Avion")
                        .WithMany("Asientos")
                        .HasForeignKey("AvionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avion");
                });

            modelBuilder.Entity("Maleta", b =>
                {
                    b.HasOne("Reservacion", "Reservacion")
                        .WithMany("Maletas")
                        .HasForeignKey("ReservacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservacion");
                });

            modelBuilder.Entity("Reservacion", b =>
                {
                    b.HasOne("Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Vuelo", b =>
                {
                    b.HasOne("Avion", "Avion")
                        .WithMany("Vuelos")
                        .HasForeignKey("AvionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Destino", "Destino")
                        .WithMany("Vuelos")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Origen", "Origen")
                        .WithMany("Vuelos")
                        .HasForeignKey("OrigenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avion");

                    b.Navigation("Destino");

                    b.Navigation("Origen");
                });

            modelBuilder.Entity("Avion", b =>
                {
                    b.Navigation("Asientos");

                    b.Navigation("Vuelos");
                });

            modelBuilder.Entity("Destino", b =>
                {
                    b.Navigation("Vuelos");
                });

            modelBuilder.Entity("Origen", b =>
                {
                    b.Navigation("Vuelos");
                });

            modelBuilder.Entity("Reservacion", b =>
                {
                    b.Navigation("Maletas");
                });
#pragma warning restore 612, 618
        }
    }
}
